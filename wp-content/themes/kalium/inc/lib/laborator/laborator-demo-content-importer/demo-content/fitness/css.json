{"laborator_custom_css":"\/* Your Custom CSS code :START *\/\r\n.yourdiv {\r\n  color: red;\r\n  font-size: 20px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\/* Your Custom CSS code :END *\/\r\n\r\n\/* Custom modification for Fitness Demo - START *\/\r\n\r\n\/* General Font Size *\/\r\nbody {\r\n\tfont-size: 15px;\r\n}\r\n\r\n\/* Set headings to italic *\/\r\nh1, h2, h3, h4, h5, h6 {\r\n\tfont-style: italic;\t\r\n}\r\n\r\n\/* Link underline height *\/\r\n.main-footer a:after, \r\n.wrapper a:after {\r\n\theight: 2px;\r\n\tbottom: -3px;\r\n}\r\n\r\n\/* Forms: Remove Autofill *\/\r\ninput:-webkit-autofill {\r\n\tbox-shadow: 0 0 0px 1000px #f0f0f0 inset !important;\r\n\t-webkit-box-shadow: 0 0 0px 1000px #f0f0f0 inset !important;\r\n\t-moz-box-shadow: 0 0 0px 1000px #f0f0f0 inset !important;\r\n\t-o-box-shadow: 0 0 0px 1000px #f0f0f0 inset !important;\r\n}\r\n\r\n\/* Menu Underline Color *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-light div.menu>ul>li>a:after, \r\n.main-header.menu-type-standard-menu .standard-menu-container.menu-skin-light ul.menu>li>a:after {\r\n\tbackground-color: #dd1f26 !important;\t\r\n}\r\n\r\n\/* Menu Underline Show *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu ul li a:after, \r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu > ul ul li a:after {\r\n\tposition: relative;\r\n}\r\n\r\n\/* Menu items in italic *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul li, \r\n.main-header.menu-type-standard-menu .standard-menu-container ul.menu li {\r\n\tfont-style: italic;\t\r\n}\r\n\r\n\/* Page Title: Margin Top *\/\r\n.section-title {\r\n\tmargin-top: 30px;\t\r\n}\r\n\r\n\/* Page Title: Size *\/\r\n.section-title h1, \r\n.section-title h2, \r\n.section-title h3 {\r\n  \tfont-size: 32px;\r\n}\r\n\r\n\/* Page Title: Margin Top *\/\r\n.wpb_wrapper .section-title>h2 {\r\n    margin-top: 30px;\r\n}\r\n\r\n\/* Page Title: Remove Margin Top for Partners *\/\r\n.partners .wpb_wrapper .section-title>h2 {\r\n    margin-top: 0px !important;\r\n} \r\n\r\n\/* Header: Border Bottom *\/\r\n.main-header {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.07);\r\n}\r\n\r\n\/* Header: Hide Border Bottom on Homepage *\/\r\nbody.home .main-header {\r\n    border-bottom: none !important;\r\n}\r\n\r\n\/* Header: Hide Border Bottom When Sticky Menu is Active *\/\r\nheader.main-header.is-sticky.sticky-initialized.sticky-active.sticky-fully-hidden {\r\n\tborder-bottom: 1px transparent;\r\n}\r\n\r\n\/* Contact - Contact Form *\/\r\n.message-form .form-group {\r\n\tpadding: 16px 22px;\t\r\n\tbackground: #F0F0F0;\r\n\tmargin-bottom: 30px;\r\n}\r\n\r\n\/* Contact - Placeholder *\/\r\n.message-form .form-group .placeholder {\r\n\tborder-bottom: none;\r\n    text-transform: uppercase;\r\n    font-style: italic;\r\n    color: #999;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n}\r\n\r\n\/* Contact - Fields Styling *\/\r\n.message-form .form-group .placeholder.ver-two {\r\n\tborder-bottom: none !important;\t\r\n}\r\n\r\n\/* Contact - Fields Styling *\/\r\n.contact-form input, \r\n.contact-form textarea {\r\n    background-image: none;\t\r\n\tborder-bottom: none;\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Contact - Send Button *\/\r\n.message-form .send {\r\n\tfont-style: italic;\t\r\n\tmargin: 0px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\t\/* Contact - Send Button Full Width in Mobile *\/\r\n\t.message-form .send {\r\n\t\twidth: 100%;\t\r\n\t}\r\n\t\r\n\t\/* Contact - Margin Bottom in Mobile *\/\r\n\t.message-form .form-group {\r\n\t\tmargin-bottom: 15px;\t\r\n\t}\r\n}\r\n\r\n\r\n\/* Contact: Address Padding  *\/\r\n.our-location {\r\n\tpadding: 65px 0;\r\n}\r\n\r\n\/* Contact: Address Padding on Mobile *\/\r\n@media screen and (max-width: 768px) {\r\n\t.our-location {\r\n\t\tpadding: 35px 0;\r\n\t}\r\n}\r\n\r\n\/* Contact: Remove Margin from Title *\/\r\n.our-location .wpb_wrapper .section-title>h2 {\r\n\tmargin-top: 0px;\t\r\n}\r\n\r\n\/* Contact: Social Networks Remove Margin *\/\r\n.contact-form .social-networks.rounded {\r\n\tmargin-left: 0px;\r\n\tpadding-left: 0px;\r\n}\r\n\r\n\/* Contact: Social Networks Background Color *\/\r\n.social-networks.rounded li a {\r\n  background: #EEE;\r\n}\r\n\r\n\/* Contact: Social Networks Margin *\/\r\n.social-networks.rounded li {\r\n\tmargin-right: 10px;\r\n}\r\n\r\n\/* Shop - Single Product Image Size *\/\r\n.woocommerce.single-product .single-product .images a img {\r\n\twidth: auto !important;\t\r\n}\r\n\r\n\/* Shop - Single Product Background Image *\/\r\n.woocommerce .image-placeholder {\r\n  background: transparent;\r\n}\r\n\r\n\/* Shop - Center Images *\/\r\n.item-images .image-placeholder {\r\n    padding-top: 0 !important;\r\n    text-align: center;\r\n}\r\n\r\n\/* Shop - Image Centering Settings *\/\r\n.item-images .image-placeholder img {\r\n    position: relative;\r\n    width: auto !important;\r\n    display: inline-block;\r\n}\r\n\r\n\/* Shop - Item Title Width *\/\r\n.item-info .col-xs-9 {\r\n  width: 100%;\r\n}\r\n\r\n\/* Shop - Item Title Centered *\/\r\n.item-info .col-xs-9 h3 {\r\n\ttext-align: center;\r\n\tfont-weight: 500;\r\n} \r\n\r\n\/* Shop - Price Centered *\/\r\n.item-info .col-xs-3 {\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n\/* Shop - Price Styling *\/\r\n.woocommerce .product.catalog-layout-default .item-info .price {\r\n\tfont-style: italic;\r\n\tfont-weight: 400;\r\n\tfloat: none;\t\r\n}\r\n\r\n\/* Shop - Price Size and Color *\/\r\n.woocommerce .product .item-info .price ins, \r\n.woocommerce .product .item-info .price > .amount {\r\n\tfont-size: 16px;\r\n\tcolor: #6b829e;\r\n}\r\n\r\n\/* Shop - Price Size and Color on Related Products *\/\r\n.single-product .woocommerce .related .product .item-info .price ins, \r\n.single-product .woocommerce .related .product .item-info .price > .amount {\r\n\tcolor: #6b829e;\r\n\t\r\n}\r\n\r\n\/* Shop - Sale Button Styling *\/\r\n.woocommerce .product .onsale {\r\n\tbackground: #dd1f26;\r\n\tcolor: #fff;\r\n\tfont-weight: 600;\r\n\ttext-transform: uppercase;\r\n\tborder-radius: 0px;\r\n\ttransform: skew(-10deg);\r\n\theight: auto !important;\r\n\tpadding: 0px;\r\n\tline-height: 31px;\r\n    top: -12px;\r\n    right: -8px;\r\n}\r\n\r\n\/* Shop - Out of Stock Style *\/\r\n.woocommerce .product .onsale.oos {\r\n\tpadding: 10px 0;\t\r\n}\r\n\r\n\/* Shop - Hide Out of Stock on Hover *\/\r\na.woocommerce-LoopProduct-link:after {\r\n    display: none;\r\n}\r\n\r\n\/* Shop - Featured Button Styling *\/\r\n.woocommerce .product .onsale.featured {\r\n\twidth: 80px;\r\n}\r\n\r\n\/* Shop - Sale Button Styling *\/\r\n.woocommerce .product .item-images {\r\n    background:  #EEE;\t\r\n    padding: 50px 0;\t\r\n}\r\n\r\n\/* Shop - Item Title Margin *\/\r\n.woocommerce .product .item-info h3 {\r\n\tmargin-bottom: 5px;\r\n}\r\n\r\n\/* Shop - Item Title Underline on Hover *\/\r\n.woocommerce .product .item-info h3 a {\r\n\tborder-bottom: 2px solid transparent;\r\n}\r\n\r\n\/* Shop - Item Title Underline on Hover *\/\r\n.woocommerce .product .item-info h3 a:hover {\r\n\tborder-bottom: 2px solid #dd1f26 ;\r\n}\r\n\r\n\/* Shop - Page Title Size *\/\r\n.woocommerce .woocommerce-header .title-holder .page-title {\r\n\tfont-size: 32px;\t\r\n}\r\n\r\n\/* Shop - Catalog Image Height *\/\r\n.woocommerce .product .item-images img {\r\n\theight: 200px;\t\r\n}\r\n\r\n\/* Shop - Price Filter *\/\r\n.wp-widget.widget_price_filter .price_slider_wrapper .price_slider .ui-slider-handle+.ui-slider-handle {\r\n\tmargin-left: -9px;\t\r\n}\r\n\r\n\/* Shop - Price Filter Slider *\/\r\n.wp-widget.widget_price_filter .price_slider_wrapper .price_slider .ui-slider-handle {\r\n    margin-left: -5px;\r\n    width: 5px;\r\n    height: 5px;\r\n\tborder-radius: 0px;\r\n\tmargin-top: -6px;\r\n\ttransform: skew(-10deg);\r\n}\r\n\r\n\/* Shop - Price Filter Button *\/\r\n.wp-widget.widget_price_filter .price_slider_wrapper .price_slider_amount .button {\r\n\tborder-radius: 0px !important;\r\n\tfont-weight: 500 !important;;\r\n}\r\n\r\n\/* Shop - Item Info List *\/\r\n.item-info ul {\r\n    margin-left: 0px;\r\n    padding-left: 0px;\r\n    color: #333;\r\n} \r\n\r\n\/* Shop - Item Info List Styling *\/\r\n.item-info ul li {\r\n    list-style-type: disc;\r\n    list-style-position: inside;\r\n}\r\n\r\n\/* Shop - Table Button *\/\r\n.woocommerce .item-info .group_table .button, \r\n.woocommerce .woocommerce .item-info form.cart .button {\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    border-radius: 0px;\t\t\r\n\tfont-style: italic;\r\n}\r\n\r\n\/* Shop - Item Tabs *\/\r\n.woocommerce .woocommerce-tabs .tabs li a, \r\n.woocommerce .woocommerce-tabs .tabs li.active a {\r\n    font-style: italic;\r\n    text-transform: uppercase;\r\n    font-weight: 500;\t\r\n    color: #1c395e;\r\n}\r\n\r\n\/* Shop - Item Tabs (Active) *\/\r\n.woocommerce .woocommerce-tabs .tabs li.active:after {\r\n    height: 2px;\r\n    background: #dd1f26;\r\n    content: \"  \";\r\n    display: block;\r\n    margin: 0 20px;\r\n    left: 0px;\r\n\tmargin-bottom: -2px;\r\n}\r\n\r\n\/* Shop - Item Tabs Styling in Mobile and Tablet  View *\/\r\n@media screen and (max-width: 768px) {\r\n\t.woocommerce .woocommerce-tabs .tabs li.active:after {\r\n\t\tdisplay: none;\t\r\n\t}\r\n\t\r\n\t.woocommerce .woocommerce-tabs .tabs {\r\n\t\tmargin-bottom: 0px;\r\n\t}\t\r\n\t\r\n\t.woocommerce .woocommerce-tabs .tabs li {\r\n\t\tborder-bottom: none;\r\n\t}\r\n\t\r\n\t.woocommerce .woocommerce-tabs .tabs li.active a {\r\n \t   color: #dd1f26;\r\n\t}\r\n}\r\n\t\r\n\/* Shop - Single Item Image Size *\/\r\n.woocommerce.single-product .single-product .images a img {\r\n\twidth: 50% !important;\t\r\n\tmargin: 0 auto;\r\n}\r\n\r\n\/* Shop - Single Item Image *\/\r\n.single-product .images {\r\n    background: #EEE;\r\n\tpadding: 50px 0;\r\n\ttext-align: center;\r\n}\r\n\r\n\/* Shop - Single Item Price *\/\r\n.woocommerce .product .item-info .price {\r\n    font-style: italic;\r\n    font-weight: 400;\t\r\n}\r\n\r\n\/* Shop - Single Item Price Styling *\/\r\n.single-product .woocommerce .product .item-info .price ins, \r\n.single-product .woocommerce .product .item-info .price > .amount {\r\n\tborder-bottom: 0px;\r\n\tcolor: #dd1f26;\r\n}\r\n\r\n\/* Shop - Single Item Hide Product Meta *\/\r\n.product_meta {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Shop - Single Item Hide Tabs Heading *\/\r\n.woocommerce .woocommerce-tabs .entry-content h2 {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Shop - Single Item Summary Color *\/\r\n.woocommerce.single-product .single-product .summary .product_title {\r\n    color: #1b3453;\r\n}\r\n\r\n\/* Shop - Single Item Table *\/\r\n.woocommerce .shop_table thead th {\r\n    padding-bottom: 12px;\r\n    text-transform: uppercase;\r\n    font-size: 12px !important;\r\n    font-style: italic;\r\n}\r\n\r\n\/* Shop - Button *\/\r\n.woocommerce .button {\r\n\tborder-radius: 0px;\r\n\tfont-style: italic;\r\n\tfont-weight: 500;\r\n\ttext-transform: uppercase;\r\n}\r\n\r\n\/* Shop - Table Button *\/\r\n.woocommerce .shop_table .actions .button {\r\n\tpadding: 8px 5px;\r\n\tfont-size: 14px;\r\n}\r\n\r\n\/* Shop - Login and Register *\/\r\n.woocommerce .bordered-block .login .absolute input, \r\n.woocommerce .bordered-block .register .absolute input, \r\n.woocommerce .bordered-block.with-form-labels .absolute input {\r\n  border-bottom: 0px;\r\n  padding-bottom: 0px;\r\n}\r\n\r\n\/* Shop - Login and Register Color *\/\r\n.woocommerce .bordered-block h2 {\r\n    color: #1b3453;\r\n}\r\n\r\n\/* Shop - Single Item Remove Image Background from Carousel *\/\r\n.shop-carousel .woocommerce {\r\n    background: transparent;\r\n}\r\n\r\n\/* Shop - Single Item Remove Image Background *\/\r\n.shop-carousel .woocommerce .product .item-images {\r\n\tbackground: transparent;\t\r\n\tpadding: 0px;\r\n}\r\n\r\n\/* Footer *\/\r\n.main-footer .footer-bottom-content {\r\n\tpadding: 20px 0;\t\r\n}\r\n\r\n\/* Footer - Widget Color *\/\r\n.main-footer .wp-widget ul li {\r\n    color: #FFF;\r\n}\r\n\r\n\/* Footer Border Color *\/\r\n.main-footer.main-footer-inverted hr {\r\n    border-color: rgba(255,255,255,.1);\r\n}\r\n\r\n\/* Footer Background Color *\/\r\nfooter.main-footer {\r\n    background-color: #1b3453 !important;\r\n}\r\n\r\n\/* Footer Font Size *\/\r\n.main-footer .footer-widgets .wp-widget .textwidget,\r\n.main-footer .footer-widgets .wp-widget p {\r\n\tfont-size: 14px;\t\r\n}\r\n\r\n\/* Footer Headings Size *\/\r\nfooter.main-footer .footer-widgets .section h1, \r\nfooter.main-footer .footer-widgets .section h2, \r\nfooter.main-footer .footer-widgets .section h3 {\r\n\tfont-size: 16px;\t\r\n}\r\n\r\n\/* Working Hours *\/\r\n.working-hours li {\r\n    border-bottom: 1px dotted rgba(255,255,255,0.1);\r\n    padding: 8px 0;\r\n}\r\n\r\n\/* Working Hours - Open *\/\r\n.working-hours li span {\r\n    float: right;\r\n    background: #DD1F26;\r\n    color: #FFF;\r\n    font-style: italic;\r\n    padding: 2px 6px;\r\n    clear: both;\r\n    text-transform: uppercase;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n}\r\n\r\n\/* Working Hours - Closed *\/\r\n.working-hours li span.closed {\r\n\tbackground: #4b6688;\r\n}\r\n\r\n\/* Instagram Feed *\/\r\n.wp-widget.null-instagram-feed .instagram-pics {\r\n\tmax-width: none;\t\r\n\tmargin: 0px;\r\n}\r\n\r\n\/* Instagram Feed - Image Width *\/\r\n.wp-widget.null-instagram-feed .instagram-pics li {\r\n \twidth: 16.6666%;\r\n}\r\n\r\n\/* Instagram Feed - Image Spacing *\/\r\n.wp-widget.null-instagram-feed .instagram-pics li a {\r\n\tpadding: 1px;\r\n}\r\n\r\n\/* Comments *\/\r\n.comment-form input, .comment-form textarea {\r\n    padding-top: 0px;\r\n    padding-bottom: 0px;\r\n    border-bottom: 0px;\r\n}\r\n\r\n\/* Benefits Icon Size *\/\r\n.benefits .wpb_single_image img {\r\n\twidth: 64px;\r\n}\r\n\r\n\/* Join Us Button *\/\r\n.join-us-button a {\r\n    background-color: #dd1f26 !important;\r\n\ttext-transform: uppercase;\r\n    font-weight: 600;\r\n\tcolor: #FFF !important;\r\n\tfont-style: italic;\r\n}\r\n\r\n\/* Join Us Button Hover *\/\r\n.join-us-button a:hover {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n\/* Join Us Button Hide Border *\/\r\n.join-us-button a:after{\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Join Us Banner - Remove Bottom Margin *\/\r\n.vc_cta3-container {\r\n\tmargin-bottom: 0px;\t\r\n}\r\n\r\n\/* Join Us Button - Styling in Mobile and Tablet  View *\/\r\n@media screen and (max-width: 768px) {\r\n\t.join-us-button {\r\n\t\twidth: 100%;\r\n\t\tmargin-top: 30px;\r\n\t\tmargin-bottom: 0px;\r\n\t}\r\n\t\r\n\t.join-us-button a {\r\n\t\twidth: 100%;\r\n\t}\r\n}\r\n\r\n\/* Coming Soon *\/\r\n.coming-soon-container {\r\n    text-align: left;\r\n\tpadding-top: 250px;\r\n}\r\n\r\n\/* Coming Soon: Title Size *\/\r\n.coming-soon-container h1 {\r\n    font-size: 65px;\r\n}\r\n\r\n\/* Coming Soon: Remove Margins *\/\r\n.coming-soon-container .col-sm-offset-2 {\r\n    margin-left: 0px;\r\n}\r\n\r\n\/* Coming Soon: Numbers *\/\r\n.coming-soon-container .countdown-holder ul span {\r\n    font-style: italic;\r\n    font-weight: 500;\r\n    font-size: 48px;\r\n}\r\n\r\n\/* Coming Soon: Small Letters *\/\r\n.countdown p { \r\n    font-style: italic;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n\/* Coming Soon: Small Letters Margin *\/\r\n.coming-soon-container .message-container p {\r\n    margin-top: 0px;\r\n}\r\n\r\n\/* Team Members *\/\r\n.team-holder .member .hover-state {\r\n\ttop: auto !important;\r\n\tpadding: 40px 0px 0px 0px !important;\r\n\tdisplay: block;\r\n\tbottom: 0 !important;\r\n\tleft: 0 !important;\r\n\tright: 0 !important; \r\n\topacity: 1;\r\n\t-moz-opacity: 1;\r\n\tfilter: alpha(opacity=100);\r\n\tvisibility: visible;\r\n}\r\n\r\n\/* Team Members: Text *\/\r\n.team-holder .member .hover-state .member-details {\r\n\tbottom: 0px;\r\n\tposition: relative;\r\n\tpadding: 20px 25px;\r\n}\r\n\r\n\/* Team Members: Gradient *\/\r\n.member .hover-state {\r\n\tbackground-color: transparent !important;\r\n\tbackground: -moz-linear-gradient(top,  rgba(0,0,0,0) 0%, rgba(0,0,0,0.5) 50%, rgba(0,0,0,0.8) 100%);\r\n\tbackground: -webkit-linear-gradient(top,  rgba(0,0,0,0) 0%,rgba(0,0,0,0.5) 50%,rgba(0,0,0,0.8) 100%);\r\n\tbackground: linear-gradient(to bottom,  rgba(0,0,0,0) 0%,rgba(0,0,0,0.5) 50%,rgba(0,0,0,0.8) 100%);\r\n\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00000000', endColorstr='#000000',GradientType=0 );\r\n}\r\n\r\n\/* Blog - Post Margin*\/ \r\n.blog-holder .box-holder .post-info {\r\n\tmargin-top: 30px;\t\r\n}\r\n\r\n\/* Blog - Sidebar Title Size*\/ \r\n.blog-sidebar .sidebar-box-holder>h3 {\r\n\tfont-size: 20px;\t\r\n}\r\n\r\n\/* Blog - Title Size*\/ \r\n.blog-holder .box-holder .post-info h2 a {\r\n\tfont-size: 24px;\t\r\n}\r\n\r\n\/* Blog - Date *\/ \r\n.blog-holder .box-holder .post-info .details .date {\r\n    position: absolute;\r\n    top: -10px;\r\n    left: -120px;\r\n    background: #dd1f26;\r\n    color: #FFF;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    width: auto;\r\n    text-align: center;\r\n    line-height: 14px;\r\n    padding: 13px 15px;\r\n    z-index: 1;\r\n\tfont-size: 12px;\r\n\tborder-radius: 60px;\r\n    transform: skew(-10deg);\r\n}\r\n\r\n\/* Blog - Hide Date and Category Icon *\/ \r\n.blog-holder .box-holder .post-info .details .category i, \r\n.blog-holder .box-holder .post-info .details .date i {\r\n\tdisplay: none;\r\n}\r\n\r\n\/* Blog - Date Font Settings *\/ \r\n.blog-holder .box-holder .post-info .details .date span {\r\n\tfont-size: 18px;\r\n\tdisplay: block;\r\n\tfont-weight: 600;\r\n}\r\n\r\n\/* Blog - Sidebar Recent Comment *\/ \r\n.wp-widget.widget_recent_comments li a {\r\n\tdisplay: inline !important;\t\r\n}\r\n\r\n\/* Blog - Sidebar List Borders *\/ \r\n.blog-sidebar .sidebar-box-holder li {\r\n    padding: 7px 0;\r\n    border-bottom: 1px solid #EEE;\r\n\tborder-top: none !important;\r\n}\r\n\r\n\/* Blog - Single Blog Prev-Next Controls Font *\/ \r\n.single-blog-holder .post-controls .next-post strong, \r\n.single-blog-holder .post-controls .prev-post strong {\r\n\tfont-style: italic;\t\r\n}\r\n\r\n\/* Blog - Blog Posts Title Size *\/ \r\n.wpb_wrapper .lab-blog-posts .blog-post-entry .blog-post-content-container .blog-post-title a {\r\n\ttext-transform: uppercase;\r\n\tfont-size: 18px;\r\n\tline-height: 20px;\r\n}\r\n\r\n\/* Clients - Margin Bottom *\/ \r\n.logos-holder.no-image-borders .c-logo {\r\n\tmargin-bottom: 35px !important;\t\t\r\n}\r\n\r\n\/* Clients - Logo Size *\/\r\n.partners .c-logo img {\r\n\tmax-width: 50%;\t\r\n}\r\n\r\n\/* Classes *\/\r\n.portfolio-holder .item-box .photo a {\r\n    background: #000;\r\n}\r\n\r\n\/* Classes - Image Opacity *\/\r\n.portfolio-item .image-placeholder {\r\n\topacity: 0.7;\r\n\t-moz-opacity: 0.7;\r\n\tfilter: alpha(opacity=70);\r\n\ttransition: all 0.2s;\r\n}\r\n\r\n\/* Classes - Image Opacity on Hover *\/\r\n.portfolio-holder .item-box .photo a:hover .image-placeholder {\r\n\topacity: 1;\r\n\t-moz-opacity: 1;\r\n\tfilter: alpha(opacity=100);\r\n}\r\n\r\n\/* Classes and Blog Category *\/\r\n.blog-holder .box-holder .post-info .category a {\r\n    color: #6b829e;\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n    font-weight: 500;\r\n}\r\n\r\n\/* Classes - Custom Class Padding *\/\r\n.class-custom-padding {\r\n\tpadding: 0 30px;\r\n}\r\n\r\n\/* No Padding on Mobile *\/\r\n@media screen and (max-width: 768px) {\r\n\t.no-padding-mobile {\r\n\t\tpadding: 0px !important;\r\n\t}\r\n}\r\n\r\n\/* Classes - Filter Font Size and Color *\/\r\n.product-filter ul li a {\r\n    font-style: italic;\r\n    text-transform: uppercase;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n}\r\n\r\n\/* Classes - Filter Color When Active *\/\r\n.product-filter ul li.active a {\r\n    color: #1b3453;\r\n}\r\n\r\n\/* Classes - Title and Category *\/\r\n.portfolio-holder .item-box .info {\r\n    padding: 10px 0;\r\n    position: absolute;\r\n    left: 30px;\r\n    bottom: 0;\r\n}\r\n\r\n\/* Classes - Title Size *\/\r\n.portfolio-holder .item-box .info h3 {\r\n  font-size: 32px;\r\n}\r\n\r\n\/* Classes - Title Color *\/\r\n.portfolio-holder .item-box .info h3 a {\r\n  color: #FFF;\r\n}\r\n\r\n\/* Classes - Category *\/\r\n.portfolio-holder .item-box .info p a {\r\n    color: #FFF;\r\n    background: #dd1f26;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    font-size: 13px;\r\n    padding: 1px 3px;\r\n    top: -5px;\r\n    position: absolute;\r\n}\r\n\r\n\/* Classes - Color on Hover *\/\r\n.portfolio-holder .item-box .info p a:hover {\r\n\tcolor: #FFF;\t\r\n}\r\n\r\n\/* Classes - Remove Underline *\/\r\n.portfolio-holder .item-box .info p a:after {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Classes - Center Title in Homepage *\/\r\n.homepage-classes .section-title {\r\n  text-align: center;\r\n}\r\n\r\n\/* Classes - Hide Overlay *\/\r\n.portfolio-holder .item-box .photo .on-hover {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Classes - Timetable *\/\r\n.timetable ul {\r\n    padding: 0px !important;\r\n}\r\n\r\n\/* Classes - Timetable Styling *\/\r\n.timetable ul li {\r\n    color: #1b3453 !important;\r\n    background: #EEE;\r\n    list-style: none;\r\n    padding: 12px !important;\r\n    margin-bottom: 2px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n}\r\n\r\n\/* Classes - Timetable Time *\/\r\n.timetable ul li strong {\r\n    float: right;\r\n    font-weight: normal;\r\n    color: #999;\r\n}\r\n\r\n\/* Pricing Table - Text Alignment *\/\r\n.pricing-table .plan {\r\n\ttext-align: left;\r\n}\r\n\r\n\/* Pricing Table - Header *\/\r\n.pricing-table .plan .plan-head {\r\n\ttext-align: left;\t\r\n\tfont-style: italic;\r\n\tpadding: 35px 35px 20px 35px;\r\n\tborder-bottom: 0px;\r\n}\r\n\r\n\/* Pricing Table - Header Text *\/\r\n.pricing-table .plan .plan-head p {\r\n\tdisplay: inline-block;\r\n\tmargin-bottom:0px;\r\n}\r\n\r\n\/* Pricing Table - Header Price *\/\r\n.pricing-table .plan .plan-head .price {\r\n\tfont-weight: 500;\r\n\tfont-size: 40px;\r\n}\r\n\r\n\/* Pricing Table - Plan Name *\/\r\n.pricing-table .plan .plan-name {\r\n    position: absolute;\r\n    left: 40px;\r\n    top: 20px;\r\n\tpadding: 0px;\r\n\tfont-style: italic;\r\n\tfont-weight: 500;\r\n\tmargin-bottom: 0px;\r\n\tborder-bottom: 0px;\r\n}\r\n\r\n\/* Pricing Table - Lists *\/\r\n.pricing-table .plan li {\r\n    padding: 10px 35px;\r\n    color: #FFF;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    border-bottom: 1px solid #334d6e;\r\n}\r\n\r\n\/* Pricing Table - Action Button *\/\r\n.pricing-table .plan .plan-action {\r\n\tpadding-bottom: 15px;\t\r\n}\r\n\r\n\/* Pricing Table - Button *\/\r\n.pricing-table .plan .plan-action .btn {\r\n    font-style: italic;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    width: 100%;\r\n    margin: 0px;\r\n}\r\n\r\n\/* Pricing Table - Selected *\/\r\n.pricing-table.selected {\r\n\tmargin-top: -25px;\t\r\n}\r\n\r\n\/* Pricing Table - Mobile Fixes *\/\r\n@media screen and (max-width: 768px) {\r\n\t.pricing-table.selected {\r\n\t\tmargin-top: 0px;\r\n\t}\r\n\t\r\n\t.pricing-table .plan {\r\n\t\tmargin-bottom: 15px;\t\r\n\t}\r\n\t\r\n\t.lab-vc-container .pricing-tables .vc_column_container {\r\n\t\tpadding-left: 15px !important;\r\n\t\tpadding-right: 15px !important;\r\n\t}\r\n}\r\n\r\n\/* Pricing Table - Selected Plan Header Padding *\/\r\n.pricing-table.selected .plan .plan-head {\r\n\tpadding: 40px 30px 30px 30px;\r\n}\r\n\r\n\/* Pricing Table - Selected Plan Name Margin *\/\r\n.pricing-table.selected .plan .plan-name {\r\n\ttop: 30px;\r\n}\r\n\r\n\/* Pricing Table - Selected Price Size *\/\r\n.pricing-table.selected .plan .plan-head .price {\r\n\tfont-size: 50px;\t\r\n}\r\n\r\n\/* Pricing Table - Selected Button Size *\/\r\n.pricing-table.selected .plan .plan-action .btn {\r\n\tfont-size: 22px;\r\n\tpadding: 12px;\r\n}\r\n\r\n\/* Customers Choice Ribbon *\/\r\nspan.customers-choice {\r\n    position: absolute;\r\n    top: -10px;\r\n    background: #dd1f26;\r\n    left: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    padding: 3px 6px;\r\n    font-size: 12px;\r\n}\r\n\r\n\/* Mobile Menu Font Styling *\/\r\n.mobile-menu-wrapper .mobile-menu-container div.menu>ul>li>a, .mobile-menu-wrapper .mobile-menu-container ul.menu>li>a {\r\n\tfont-weight: 400;\r\n\tfont-style: italic;\r\n\tpadding-bottom: 5px;\r\n}\r\n\r\n\/* Mobile Sub Menu Font Styling *\/\r\n.mobile-menu-wrapper .mobile-menu-container div.menu>ul>li ul>li>a, .mobile-menu-wrapper .mobile-menu-container ul.menu>li ul>li>a {\r\n\tfont-size: 16px;\r\n    font-style: italic;\r\n    text-transform: uppercase;\t\r\n}\r\n\r\n\/* Mobile Search Styling *\/\r\n.mobile-menu-wrapper .mobile-menu-container .search-form input, .mobile-menu-wrapper .mobile-menu-container .search-form input:focus + label {\r\n    text-transform: uppercase;\r\n    font-style: italic;\r\n    font-size: 16px;\t\r\n}\r\n\/* Custom modification for Fitness Demo - END *\/","laborator_custom_css_lg":"","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\r\n\r\ndiv.example-el {\r\n\tcolor: lighten($color, 20%);\r\n}"}